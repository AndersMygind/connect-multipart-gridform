{"name":"Connect-multipart-gridform","body":"Connect multipart middleware configured to use MongoDB GridFS for file storage.\r\n\r\n## install\r\n\r\n```\r\nnpm install connect-multipart-gridform\r\n```\r\n\r\n## use\r\n\r\n```js\r\nvar multipart = require('connect-multipart-gridform');\r\napp.use(multipart(options));\r\n```\r\n\r\n## options\r\n\r\nOptions work the same way as in the connect [multipart]() middleware, with these additions:\r\n\r\n  - db: (required) an open [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) db instance\r\n  - mongo: (required) the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native) driver you created the db with\r\n  - filename: (optional) function\r\n\r\nThe optional `filename` function is passed the `file.name` before streaming to MongoDB providing an opportunity to customize the filename with a prefix etc.\r\n\r\n_For the curious, the options are first passed into a [gridform](https://github.com/aheckmann/gridform) before passing on to connects multiple middleware._\r\n\r\n## why?\r\n\r\nConnect multipart middleware uses [formidable](https://github.com/felixge/node-formidable) to process file uploads. `formidable` streams the files to disk. Now you can stream directly into GridFS.\r\n\r\n## tests\r\n\r\nRun the tests with `make test`.\r\n\r\n## version\r\n\r\nCurrently only works with Express 3.\r\n\r\n[LICENSE](https://github.com/aheckmann/connect-multipart-gridform/blob/master/LICENSE)\r\n\r\n","tagline":"Connect multipart middleware configured to use MongoDB GridFS for file storage.","google":"UA-31712388-1","note":"Don't delete this file! It's used internally to help with page regeneration."}